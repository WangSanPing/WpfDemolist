<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfDemolist.ResourceDictionary">


    <ControlTemplate  x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="Border" BorderBrush="Orange" BorderThickness="3" CornerRadius="20" Background="Red" 
                    TextBlock.Foreground="White">
            <Grid>
                <Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black"  StrokeThickness="1"
                               StrokeDashArray="1 2" SnapsToDevicePixels="True"></Rectangle>
                <!--↓ ContentPresenter标记如果不存在不会显示内容
                            RecognizesAccessKey 属性代表按钮可以接受快捷键-->
                <ContentPresenter Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" ></ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--↓光标移入-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="DarkRed" />
            </Trigger>
            <!--↓按下-->
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="IndianRed"></Setter>
                <Setter TargetName="Border" Property="BorderBrush" Value="DarkKhaki"></Setter>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter TargetName="FocusCue" Property="Visibility" Value="Visible"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray"></Setter>
                <Setter TargetName="Border" Property="Background" Value="MistyRose"></Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ButtonTemplateWithAnimation" TargetType="{x:Type Button}">
        <Border x:Name="Border" BorderBrush="Orange" BorderThickness="3" CornerRadius="20" Background="Brown"
                    TextBlock.Foreground="White">
            <Grid>
                <Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black"  StrokeThickness="1"
                               StrokeDashArray="1 2" SnapsToDevicePixels="True"></Rectangle>
                <!--↓ ContentPresenter标记如果不存在不会显示内容
                            RecognizesAccessKey 属性代表按钮可以接受快捷键-->
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"
                    RecognizesAccessKey="True" ></ContentPresenter>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="Blue"
                                            Duration="0:0:1"
                                            AutoReverse="True"
                                            RepeatBehavior="Forever"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Background.Color"
                                            Duration="0:0:0.5"></ColorAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate  x:Key="defaultButtonNoHightlight" 
                          TargetType="ButtonBase" 
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:s="clr-namespace:System;assembly=mscorlib" 
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
        <Border  BorderThickness="{TemplateBinding Border.BorderThickness}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="border" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Name="contentPresenter" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Focusable="False" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <!--<Trigger Property="UIElement.IsMouseOver">
                    <Setter Property="Panel.Background" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush>#FFBEE6FD</SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Border.BorderBrush" TargetName="border">
                        <Setter.Value>
                            <SolidColorBrush>#FF3C7FB1</SolidColorBrush>
                        </Setter.Value>
                    </Setter>
                    <Trigger.Value>
                        <s:Boolean>True</s:Boolean>
                    </Trigger.Value>
                </Trigger>-->
            <Trigger Property="ButtonBase.IsPressed">
                <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFC4E5F6</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FF2C628B</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked">
                <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFBCDDEE</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FF245A83</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>True</s:Boolean>
                </Trigger.Value>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled">
                <Setter Property="Panel.Background" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFF4F4F4</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Border.BorderBrush" TargetName="border">
                    <Setter.Value>
                        <SolidColorBrush>#FFADB2B5</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter">
                    <Setter.Value>
                        <SolidColorBrush>#FF838383</SolidColorBrush>
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <s:Boolean>False</s:Boolean>
                </Trigger.Value>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>